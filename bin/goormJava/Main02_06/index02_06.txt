2-6. 추상클래스 & Interface

 // 객체지향 특징중 캡슐화(정보은닉),다형성,추상화,상속성 
 // 디자인 패턴과도 관련 (생성, 구조, 행위)
 
 1. 추상클래스(abstract class)
  (1) 개념
   * 하나이상의 추상 메소드를 포함하는 클래스를 추상클래스 라고 한다. // 뭔가 구현이 안된것
   * 객체지향에서 공통의 멤버와 메소드를 정의한 클래스이다.
   
  (2) 특징
   * 추상 클래스 앞에 abstract키워드를 이용해서 정의한다.
   * 추상클래스는 미완성된 추상메서드(내용이 없는 메서드)를 포함한다.
   * 추상메서드는 리턴타입 앞에 abstract키워드를 붙여야 한다.
   * 추상클래스는 인스턴스를 생성할수 없다.  				 // 추상적인 객체가지고는 아무것도 뭘 할수 없으니
   * 추상클래스를 상속받은 클래스는 미완성된 추상메서드를 오버라이딩해야 각체를 생성할수 있다. (재정의 해야된단 뜻)
   * 추상메서드는 오버라이딩을 전제로 하기 때문에, private으로 선언할수 없다. (protected : 상속관계,동일폴더/ default : 동일폴더)
   
  (3) 추상클래스 사용이유
   * 공통 멤버변수와 메서드를 모아놓을때 사용한다.
   * 실체클래스를 구현할때 공통의 속성을 모아놓은 추상클래스를 상속받았기 때문에 시간을 절약한다
   * 객체지향적인 설계를 할때 사용한다.
   
 2. 인터페이스
  (1) 개념
   * 모든 메서드가 구현되지 않은 추상클래스의 극단이다.
   * 클래스가 사용하는 멤버변수와 메서드의 틀만 제공한다.
   * 추상클래스든, 그냥클래스든 extends 하는데, 인터페이스는 implements 한다.
   
  (2) 특징
   * 클래스가 아닌 interface키워드를 사용한다.
   * 인터페이스 상속은 extends가 아닌 implements 사용한다
   * 인터페이스는 객체를 생성할수 없다
   * 인터페이스를 상속받으면 모든메서드를 구현해야 한다
   
  