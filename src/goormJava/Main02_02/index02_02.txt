2-2. 상속&생성자(1)

 1.상속(Inheritance)
 	(1) 개념
 	 - 부모클래스 멤버를 자식클래스가 상속받아서 사용
 	 - 자바는 단일상속만 지원함 (extends ~~)
 	 - 클래스 재사용으로 효율적이고, 중복된 코드가 줄어들어 코드가 간결해짐
 	 
 	(2) 특징
 	 - extends 사용해서 상속
 	 - 자바는 한번에 하나의 부모클래스만 상속 받는거 가능
 	 - private접근제한을 갖는 멤버변수및 메소드는 물려받을수 없음
 	 - 부모와 자식클래스가 서로 다른 패키지에 있다면, 
 	   부모의 default 접근제한을 갖는 멤버변수및 메소드는 물려받을수 없음
 	   (protected, public는 상속가능)
 	   
 	(3) 상속 키워드
 	 - extends
 	   * 상속받을때 사용하는 키워드
 	 - super
 	   * 자식클래스에서 부모클래스를 명시적으로 사용하고자 할때 이용
 	   * 부모의 생성자, 메서드, 멤버변수를 지정할수 있다
 	 - this
 	   * 자신의 클래스에 선언된 멤버변수및 메서드를 가리킨다.
 	   
 2. 생성자(Constructor)
  (1) 개념 
   - 인스턴스가 생성될때 가장먼저 호출되는 일종의 메서드다
   - 생성자는 멤버변수 값을 초기화하는 역할을 한다.
   
  (2) 특징
   - 인스턴스가 만들어질때 초기값 지정
   - 자바에서 생성자는 해당클래스 이름과 같아야함
   - 생성자는 인자를 다르게 해서 여러개 가질수 있음
   - 상속관계에 있을때, 생성자는 부모의 생성자부터 호출
   - 부모 생성자를 명시적으로 호출하기 위해서는 super 사용
   - 만약 명시적으로 부모 생성자를 호출하지 않는다면, 묵시적으로 부모의 인자없는 생성자를 호출한다. (문풀하면서 확인가능)
   
  (3) 부모현태로 자식을 생성시킬때 특징
   - 부모가 가지고 있는 메서드만 사용 가능 
   - 생성자는 부모먼저 호출하고, 자식의 생성자까지 호출 (선부모, 후자식 호출)
   - 메서드를 자식이 오버라이딩 하게되면 자식의 메서드를 사용한다 (문풀하면서 익히기)
   - static한 메서드는 부모의 메서드를 호출한다. (문풀하면서 익히기) 
   - 두 클래스가 모두 같은 멤버변수를 갖고있다면, 부모값을 참조하게 된다.
   
  (4) 생성자 선언
   class Car{
   String model;
   String year;
   Car(){
	    this.model="sonata";
	    this.year=2022;
    }
    Car(String model){
	    this.model=model;
	    this.year=2022;
    }
    Car(String model, int year){
	     this.model=model;
	     this.year=year;
    }
    public void print(){
     	System.out.println(this.model+":"+this.year);
     }
    }
 	